sequenceDiagram
  participant Client
  participant Server as New Laravel Application Instance
  participant Database
  participant Queue as Message Queue
  participant Job
  Client->>Server: HTTP request (start job)
  activate Server
  Server->>Database: Create Job record (status: processing)
  Server->>Queue: Add job to the queue
  Server-->>Client: Return Job id
  deactivate Server
  Note over Client: Client stores the Job id temporarily
  Queue->>Job: Dispatch job
  Job->>Database: Update Job status (started, error, completed)
  Note over Client: Client periodically polls for job status
  Client->>Server: HTTP request (get job status)
  activate Server
  Server->>Database: Listens to Database Job status
  Server-->>Client: Return Job status
  deactivate Server
